{"version":3,"sources":["example-data.js","eggs/step/changeCode.js","eggs/step/stepReducer.js","eggs/step/start.js","eggs/step/next.js","eggs/step/finish.js","eggs/code/getCode.js","eggs/step/getStep.js","eggs/step/getIndex.js","eggs/step/getTests.js","test/index.js","eggs/step/getTestsResult.js","eggs/step/areTestsPassing.js","eggs/step/isLastStep.js","eggs/step/isPastLastStep.js","eggs/step/index.js","eggs/code/codeReducer.js","eggs/code/index.js","eggs/steps/getSteps.js","eggs/steps/index.js","eggs/steps/decorateNext.js","eggs/step/getKeystrokes.js","eggs/steps/reduceSteps.js","eggs/eggine.js","components/Counter.js","components/Tests.js","components/Arena.js","components/Score.js","components/Welcome.js","App.js","eggs/createAppStore.js","serviceWorker.js","index.js"],"names":["primes","n","i","initialCode","steps","map","test","changeCode","code","type","stepReducer","state","action","index","keystrokes","exampleData","getCode","getStep","step","getIndex","getTests","createSelector","slice","s","m","cb","getTestsResult","tests","template","failure","Function","runTests","expect","jestMock","e","parseAndRunTests","areTestsPassing","every","r","isLastStep","length","isPastLastStep","reduce","codeReducer","decorateAction","afterAction","getSteps","getKeystrokes","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","runActionCbs","cbs","opts","filter","forEach","eggMiddleware","protocol","decorators","afters","actionType","push","appendMiddleware","store","next","getState","Counter","useSelector","success","style","textAlign","padding","border","background","Tests","results","useMemo","className","margin","maxWidth","pass","key","reverse","Arena","lastStep","dispatch","useDispatch","useEffect","prettier","format","parser","plugins","parser_babylon","replace","value","onValueChange","highlight","languages","js","color","fontWeight","textDecoration","cursor","onClick","Score","overflow","borderRadius","width","height","data","name","Keystrokes","top","right","left","bottom","strokeDasharray","dataKey","fill","Welcome","role","aria-label","href","eggs","flat","Number","MAX_SAFE_INTEGER","reducers","middlewareList","reducer","oneMiddleware","egg","createStore","combineReducers","applyMiddleware","hatchStore","ImplApp","pastLastStep","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dd36e46.chunk.js","sourcesContent":["function primes(n) {\n  for (var i = 2; i < n; i += 1) if (n % i === 0) return [i, ...primes(n / i)];\n  if (n > 1) return [n];\n  return [];\n}\n\nexport default {\n  initialCode: `function primes(n) {\n    return null;\n}`,\n  steps: [\n    ...[\n      1,\n      2,\n      3 /*\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25*/\n    ].map(n => ({\n      test: `expect(primes(${n})).toEqual([${primes(n)}])`\n    })),\n    {\n      test: `test('end', () => {});`\n    }\n  ]\n};\n/*\nfunction primes(n) {\nif(n%2==0)return[2,...primes(n/2)]\nif(n%3==0)return[3,...primes(n/3)]\nif(n>1)return[n]\n    return[];\n}\n\nfunction primes(n) {\nfor (var i =2;i<n;i+=1)\nif(n%i==0)return[i,...primes(n/i)]\nif(n>1)return[n]\n    return[];\n}\n*/\n","export const CHANGE_CODE = \"CHANGE_CODE\";\nexport function changeCode(code) {\n  return { type: CHANGE_CODE, code };\n}\n","import exampleData from \"../../example-data\";\nimport { START } from \"./start\";\nimport { CHANGE_CODE } from \"./changeCode\";\nimport { NEXT } from \"./next\";\nimport { FINISH } from \"./finish\";\n\nexport function stepReducer(state = null, action) {\n  switch (action.type) {\n    case START: {\n      return {\n        index: 0,\n        keystrokes: 0,\n        code: exampleData.initialCode\n      };\n    }\n\n    case CHANGE_CODE: {\n      return {\n        ...state,\n        keystrokes: state.keystrokes + 1,\n        code: action.code\n      };\n    }\n\n    case NEXT: {\n      return {\n        ...state,\n        index: state.index + 1,\n        keystrokes: 0\n      };\n    }\n\n    case FINISH: {\n      return null;\n    }\n\n    default:\n      return state;\n  }\n}\n","export const START = \"START\";\nexport function start() {\n  return { type: START };\n}\n","export const NEXT = \"NEXT\";\nexport function next() {\n  return { type: NEXT };\n}\n","export const FINISH = \"FINISH\";\nexport function finish() {\n  return { type: FINISH };\n}\n","export function getCode(state) {\n  return state.code;\n}\n","export function getStep(state) {\n  return state.step;\n}\n","import { getStep } from \"./getStep\";\n\nexport function getIndex(state) {\n  return getStep(state)?.index;\n}\n","import { createSelector } from \"reselect\";\nimport exampleData from \"../../example-data\";\nimport { getIndex } from \"./getIndex\";\n\nexport const getTests = createSelector(getIndex, index =>\n  exampleData.steps.slice(0, index + 1).map(s => s.test)\n);\n","import expect from \"jest-matchers\";\nimport jestMock from \"jest-mock\";\n\nfunction test(m, cb) {\n  cb();\n}\n\nexport function parseAndRunTests(code, tests) {\n  const template = `'use strict';return function(expect, jest, test) {${code};\\n${tests}}`;\n\n  let failure = null;\n  try {\n    // eslint-disable-next-line no-new-func\n    const runTests = Function(template)();\n    runTests(expect, jestMock, test);\n  } catch (e) {\n    failure = e;\n  }\n  return failure;\n}\n","import { createSelector } from \"reselect\";\nimport { getCode } from \"../code/getCode\";\nimport { getTests } from \"./getTests\";\nimport { parseAndRunTests } from \"../../test\";\n\nexport const getTestsResult = createSelector(getCode, getTests, (code, tests) =>\n  tests.map(test => parseAndRunTests(code, test))\n);\n","import { getTestsResult } from \"./getTestsResult\";\n\nexport function areTestsPassing(state) {\n  return getTestsResult(state).every(r => r === null);\n}\n","import exampleData from \"../../example-data\";\nimport { getIndex } from \"./getIndex\";\n\nexport function isLastStep(state) {\n  const index = getIndex(state);\n  return index === exampleData.steps.length - 1;\n}\n","import exampleData from \"../../example-data\";\nimport { getIndex } from \"./getIndex\";\n\nexport function isPastLastStep(state) {\n  const index = getIndex(state);\n  return index >= exampleData.steps.length;\n}\n","import { stepReducer } from \"./stepReducer\";\n\nexport * from \"./areTestsPassing\";\nexport * from \"./changeCode\";\nexport * from \"./finish\";\nexport * from \"./getIndex\";\nexport * from \"./getKeystrokes\";\nexport * from \"./getStep\";\nexport * from \"./getTests\";\nexport * from \"./getTestsResult\";\nexport * from \"./isLastStep\";\nexport * from \"./isPastLastStep\";\nexport * from \"./next\";\nexport * from \"./start\";\n\nexport default ({ reduce }) => reduce(\"step\", stepReducer);\n","import exampleData from \"../../example-data\";\nimport { START, CHANGE_CODE } from \"../step\";\n\nexport function codeReducer(state = null, action) {\n  switch (action.type) {\n    case START:\n      return exampleData.initialCode;\n\n    case CHANGE_CODE:\n      return action.code;\n\n    default:\n      return state;\n  }\n}\n","import { codeReducer } from \"./codeReducer\";\n\nexport * from \"./getCode\";\n\nexport default ({ reduce, decorateAction, afterAction }) => {\n  reduce(\"code\", codeReducer);\n};\n","export function getSteps(state) {\n  return state.steps;\n}\n","import { decorateNext } from \"./decorateNext\";\nimport { reduceSteps } from \"./reduceSteps\";\n\nexport * from \"./getSteps\";\n\nexport default [decorateNext, reduceSteps];\n","import { getIndex, getKeystrokes } from \"../step\";\nimport { NEXT } from \"../step/next\";\n\nexport function decorateNext({ decorateAction }) {\n  decorateAction(NEXT, (action, { state }) => {\n    action.keystrokes = getKeystrokes(state);\n    action.index = getIndex(state);\n  });\n}\n","import { getStep } from \"./getStep\";\n\nexport function getKeystrokes(state) {\n  return getStep(state).keystrokes;\n}\n","import { NEXT, FINISH } from \"../step\";\n\nexport function reduceSteps({ reduce }) {\n  reduce(\"steps\", (state = [], action) => {\n    switch (action.type) {\n      case NEXT: {\n        return [...state, { keystrokes: action.keystrokes }];\n      }\n\n      case FINISH: {\n        return [];\n      }\n\n      default:\n        return state;\n    }\n  });\n}\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction runActionCbs(cbs, action, opts) {\n  cbs\n    .filter(([type]) => type === action.type)\n    .forEach(([, cb]) => cb(action, opts));\n}\n\nfunction eggMiddleware(protocol) {\n  const decorators = [];\n  const afters = [];\n\n  protocol.decorateAction = (actionType, cb) =>\n    void decorators.push([actionType, cb]);\n  protocol.afterAction = (actionType, cb) => void afters.push([actionType, cb]);\n\n  protocol.appendMiddleware(store => next => action => {\n    runActionCbs(decorators, action, { state: store.getState() });\n    next(action);\n    runActionCbs(afters, action, { state: store.getState() });\n  });\n}\n\nexport function hatchStore(...eggs) {\n  eggs = eggs.flat(Number.MAX_SAFE_INTEGER);\n\n  const reducers = {};\n  const middlewareList = [];\n\n  const protocol = {\n    reduce(name, reducer) {\n      reducers[name] = reducer;\n    },\n\n    appendMiddleware(oneMiddleware) {\n      middlewareList.push(oneMiddleware);\n    }\n  };\n\n  eggMiddleware(protocol);\n  eggs.forEach(egg => egg(protocol));\n  return createStore(\n    combineReducers(reducers),\n    composeEnhancers(applyMiddleware(...middlewareList))\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getStep, areTestsPassing } from \"../eggs\";\n\nexport function Counter() {\n  const { keystrokes } = useSelector(getStep);\n  const success = useSelector(areTestsPassing);\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"2rem\" }}>\n      <span\n        style={{\n          border: \"solid black 5px\",\n          background: success ? \"lightgreen\" : \"lightcoral\",\n          padding: \"1rem\",\n          style: \"inline-block\"\n        }}\n      >\n        {keystrokes}\n      </span>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getTests, getTestsResult } from \"../eggs\";\n\nexport function Tests() {\n  const tests = useSelector(getTests);\n  const results = useSelector(getTestsResult);\n\n  return useMemo(\n    () => (\n      <div\n        className=\"prism\"\n        style={{\n          border: \"lightgreen solid 7px\",\n          margin: \"1em auto\",\n          maxWidth: \"60em\"\n        }}\n      >\n        {tests\n          .map((test, index) => {\n            const pass = results[index] === null;\n            return (\n              <div\n                style={{\n                  background: pass ? \"lightgreen\" : \"lightcoral\",\n                  padding: \".5em 1em\"\n                }}\n                key={index}\n              >\n                {pass ? \"🟢\" : \"🔴\"} {test}\n              </div>\n            );\n          })\n          .reverse()}\n      </div>\n    ),\n    [tests, results]\n  );\n}\n","import React, { useEffect } from \"react\";\nimport prettier from \"prettier/standalone\";\nimport parser_babylon from \"prettier/parser-babylon\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getCode,\n  changeCode,\n  areTestsPassing,\n  next,\n  isLastStep,\n} from \"../eggs\";\nimport { Counter } from \"./Counter\";\nimport { Tests } from \"./Tests\";\n\nexport function Arena() {\n  const code = useSelector(getCode);\n  const success = useSelector(areTestsPassing);\n  const lastStep = useSelector(isLastStep);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (success)\n      dispatch(\n        changeCode(\n          prettier\n            .format(code, {\n              parser: \"babylon\",\n              plugins: [parser_babylon],\n            })\n            .replace(/\\n$/, \"\")\n        )\n      );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [success]);\n\n  return (\n    <div>\n      <Counter />\n      <Editor\n        className=\"prism\"\n        value={code}\n        onValueChange={(code) => dispatch(changeCode(code))}\n        highlight={(code) => highlight(code, languages.js)}\n        padding={10}\n      />\n      {success && (\n        <div style={{ textAlign: \"center\" }}>\n          <br />\n          <span\n            style={{\n              color: \"yellow\",\n              fontWeight: \"bolder\",\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => dispatch(next())}\n          >\n            {lastStep ? \"Finish\" : \"Next\"} »\n          </span>\n        </div>\n      )}\n      <br />\n      <Tests />\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { getSteps } from \"../eggs/steps\";\nimport { finish } from \"../eggs\";\n\nexport function Score() {\n  const steps = useSelector(getSteps);\n  const dispatch = useDispatch();\n\n  return useMemo(\n    () => (\n      <div\n        style={{\n          color: \"yellow\",\n          fontWeight: \"bold\",\n          margin: \"1em auto\",\n          textAlign: \"center\",\n          overflow: \"auto\",\n          maxWidth: \"100%\",\n          padding: \"0 1em\"\n        }}\n      >\n        Keystrokes per Step\n        <BarChart\n          style={{\n            margin: \"1em auto\",\n            background: \"white\",\n            fontWeight: \"normal\",\n            borderRadius: \"1em\",\n            padding: \"1em\",\n            color: \"black\"\n          }}\n          width={50 * steps.length}\n          height={300}\n          data={steps.map((step, index) => ({\n            name: `Step ${index + 1}`,\n            Keystrokes: step.keystrokes\n          }))}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Bar dataKey=\"Keystrokes\" fill=\"#8884d8\" />\n        </BarChart>\n        <br />\n        <br />\n        <br />\n        <span onClick={() => dispatch(finish())} style={{ cursor: \"pointer\" }}>\n          Home »\n        </span>\n      </div>\n    ),\n    [steps]\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { start } from \"../eggs\";\n\nexport function Welcome() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <span role=\"img\" aria-label=\"golf\" className=\"App-logo\">\n          ⛳\n        </span>\n        <p>Pass the test with the minimum keystrokes.</p>\n        <a className=\"App-link\" href onClick={() => dispatch(start())}>\n          Start!\n        </a>\n      </header>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { createAppStore, getStep, isPastLastStep, changeCode } from \"./eggs\";\nimport \"./App.css\";\nimport { Arena, Score, Welcome } from \"./components\";\nimport { start, next } from \"./eggs\";\n\nconst store = createAppStore();\nif (false) store.dispatch(start());\nif (false) store.dispatch(next());\nif (false) store.dispatch(changeCode(\"aaa\"));\n\n// ⛳🏌🕳🚩🏌️‍♂️🏌️‍♀️\n\nfunction ImplApp() {\n  const step = useSelector(getStep);\n  const pastLastStep = useSelector(isPastLastStep);\n\n  if (!step) return <Welcome />;\n  if (pastLastStep) return <Score />;\n  return <Arena step={step} />;\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ImplApp />\n    </Provider>\n  );\n}\n\nexport default App;\n","import code from \"./code\";\nimport step from \"./step\";\nimport steps from \"./steps\";\nimport { hatchStore } from \"./eggine\";\n\nexport function createAppStore() {\n  return hatchStore(code, step, steps);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}